# read in original, unformatted data
Pest_Dat <- read.csv("Data/Script1_PRM/Concentration_2024-05-14_17-12.csv", header = TRUE)
# read in template first (allows cross checking of header names)
Template <- read.csv("Data/Script1_PRM/Tidy Format Example.csv", header = TRUE)
# Set the location of the folder that contains the .xls files you want to upload
# Or set your working directory using Session > Set Working Directory > Choose Directory
folder <- "Data/Script2_LandUse/Upstream"
# Set the location of the folder that contains the .xls files you want to upload
# Or set your working directory using Session > Set Working Directory > Choose Directory
folder <- "Data/Script2_LandUse/Upstream"
# Create a list of all .xls files in the folder
file_list <- list.files(path = folder, pattern = "*.xls", full.names = TRUE)
# Initialize an empty list to store data frames
df_list <- list()
# Loop through each file
for (file in file_list) {
# Extract the unique segment ID from the number that occurs after '_" in each file name
file_name <- basename(file)
#PointID <- sub(".*_(.*)\\.xls", "\\1", file_name)
#PointID <- sub(".*_export_(\\d+)\\.xls$", "\\1", file_name)
PointID <- sub(".*_up(\\d+)\\.xls$", "\\1", file_name)
print(paste("File name:", file_name, " | Extracted PointID:", PointID))
# Read in the first sheet of each .xls file
df <- read_excel(file, sheet = 1)
# Add the identifier column
#df <- df %>% mutate(PointID = PointID)
df <- df %>% mutate(PointID = PointID, FileName = file_name)
# Attach each new data frame to the list
df_list <- append(df_list, list(df))
}
# first you need to install and load these libraries
library(readxl)
library(dplyr)
library(lubridate)
library(tidyr)
# Initialize an empty list to store data frames
df_list <- list()
# Loop through each file
for (file in file_list) {
# Extract the unique segment ID from the number that occurs after '_" in each file name
file_name <- basename(file)
#PointID <- sub(".*_(.*)\\.xls", "\\1", file_name)
#PointID <- sub(".*_export_(\\d+)\\.xls$", "\\1", file_name)
PointID <- sub(".*_up(\\d+)\\.xls$", "\\1", file_name)
print(paste("File name:", file_name, " | Extracted PointID:", PointID))
# Read in the first sheet of each .xls file
df <- read_excel(file, sheet = 1)
# Add the identifier column
#df <- df %>% mutate(PointID = PointID)
df <- df %>% mutate(PointID = PointID, FileName = file_name)
# Attach each new data frame to the list
df_list <- append(df_list, list(df))
}
write.csv(final_df, "Outputs/Script2_LandUse/Upstream_LU.csv", row.names = FALSE)
# first you need to install and load these libraries
library(readxl)
library(dplyr)
library(lubridate)
library(tidyr)
# Set the location of the folder that contains the .xls files you want to upload
# Or set your working directory using Session > Set Working Directory > Choose Directory
folder <- "Data/Script2_LandUse/Upstream"
# Create a list of all .xls files in the folder
file_list <- list.files(path = folder, pattern = "*.xls", full.names = TRUE)
# Initialize an empty list to store data frames
df_list <- list()
# Loop through each file
for (file in file_list) {
# Extract the unique segment ID from the number that occurs after '_" in each file name
file_name <- basename(file)
#PointID <- sub(".*_(.*)\\.xls", "\\1", file_name)
#PointID <- sub(".*_export_(\\d+)\\.xls$", "\\1", file_name)
PointID <- sub(".*_up(\\d+)\\.xls$", "\\1", file_name)
print(paste("File name:", file_name, " | Extracted PointID:", PointID))
# Read in the first sheet of each .xls file
df <- read_excel(file, sheet = 1)
# Add the identifier column
#df <- df %>% mutate(PointID = PointID)
df <- df %>% mutate(PointID = PointID, FileName = file_name)
# Attach each new data frame to the list
df_list <- append(df_list, list(df))
}
# Combine all data frames into one
final_df <- bind_rows(df_list)
# View the final data frame
print(final_df)
#########################################
# Sum up 'Area_km2' for each land use category
final_df <- final_df %>%
group_by(Reefscape, PointID) %>%
summarise(Total_Area_km2 = sum(Area_km2, na.rm = TRUE)) %>%
ungroup()
# Pivot wider based on 'Reefscape'
final_df <- final_df %>%
pivot_wider(names_from = Reefscape, values_from=Total_Area_km2)
# Change the column name for irrigated cropping
colnames(final_df)[6] <- "Irrigated.Cropping"
# Replace NA with 0
final_df <- final_df %>%
mutate(across(everything(), ~replace_na(., 0)))
# Check what land use category is present
unique_values <- unique(final_df$Reefscape)
print(unique_values)
# Calculate size of the entire catchment
# Adjust using the list of catchment from the previous step
final_df$sum <- final_df$Conservation + final_df$Forestry + final_df$Grazing + final_df$Horticulture + final_df$Irrigated.Cropping + final_df$Other + final_df$Sugar + final_df$Urban + final_df$Water + final_df$Wetland
# Create a relative.land use column for each available land use category
# Adjust using the list of catchment from the previous step
{final_df$Relative.Conservation <- final_df$Conservation/final_df$sum
final_df$Relative.Forestry <- final_df$Forestry/final_df$sum
final_df$Relative.Horticulture <- final_df$Horticulture/final_df$sum
final_df$Relative.Grazing <- final_df$Grazing/final_df$sum
final_df$Relative.Irrigated.Cropping <- final_df$Irrigated.Cropping/final_df$sum
final_df$Relative.Other <- final_df$Other/final_df$sum
final_df$Relative.Sugar <- final_df$Sugar/final_df$sum
final_df$Relative.Urban <- final_df$Urban/final_df$sum
final_df$Relative.Water <- final_df$Water/final_df$sum
final_df$Relative.Wetland <- final_df$Wetland/final_df$sum
}
# Dryland cropping is one of the parameters in the regression model, add it with a value of 0
final_df$Relative.Dryland.Cropping <- 0
# Only needed if 'PointID' is in a wrong format
# final_df$PointID <- as.numeric(sub("^2", "", final_df$PointID))
write.csv(final_df, "Outputs/Script2_LandUse/Upstream_LU.csv", row.names = FALSE)
# Ready for the Regression Model
